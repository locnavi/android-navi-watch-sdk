apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.navSdkVersionCode
        versionName rootProject.ext.android.navSdkVersionName
        testInstrumentationRunner rootProject.ext.android.testInstrumentationRunner

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

//    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
//    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }


}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile(rootProject.ext.dependencies["androidTestCompile"], {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["design"]
    compile(rootProject.ext.dependencies["glide"])
    if (gradleMode.toInteger() == 0) {
        compile project(':location')
    } else if (gradleMode.toInteger() == 1) {
        compile project(':location')
    } else if (gradleMode.toInteger() == 2) {
        compile(rootProject.ext.dependencies["location"])
    }
//    implementation project(':location')
}

if (gradleMode.toInteger() == 0) {
    apply from: './upload-local.gradle'
} else if (gradleMode.toInteger() == 1) {
    apply from: './upload-local.gradle'
} else if (gradleMode.toInteger() == 2) {
    apply from: './upload-remote.gradle'
}
